// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/handlers/post/post.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/borismarvin/shortener_url.git/internal/app/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockURLSaver is a mock of URLSaver interface.
type MockURLSaver struct {
	ctrl     *gomock.Controller
	recorder *MockURLSaverMockRecorder
}

// MockURLSaverMockRecorder is the mock recorder for MockURLSaver.
type MockURLSaverMockRecorder struct {
	mock *MockURLSaver
}

// NewMockURLSaver creates a new mock instance.
func NewMockURLSaver(ctrl *gomock.Controller) *MockURLSaver {
	mock := &MockURLSaver{ctrl: ctrl}
	mock.recorder = &MockURLSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLSaver) EXPECT() *MockURLSaverMockRecorder {
	return m.recorder
}

// AddURL mocks base method.
func (m *MockURLSaver) AddURL(ctx context.Context, key, value entity.URL) entity.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddURL", ctx, key, value)
	ret0, _ := ret[0].(entity.Response)
	return ret0
}

// AddURL indicates an expected call of AddURL.
func (mr *MockURLSaverMockRecorder) AddURL(ctx, key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddURL", reflect.TypeOf((*MockURLSaver)(nil).AddURL), ctx, key, value)
}
